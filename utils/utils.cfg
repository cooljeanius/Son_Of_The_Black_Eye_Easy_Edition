#textdomain wesnoth-sotbeee

#define OLD_ORCISH_SHAMAN SIDE X Y ID_STRING NAME_STRING
    [unit]
        id={ID_STRING}
        name={NAME_STRING}
        unrenamable=yes
        type=Old Orcish Shaman
        profile=portraits/old_orcish_shaman.png
        side={SIDE}
        x={X}
        y={Y}
        random_traits=no
        {IS_HERO}
        [modifications]
            {TRAIT_LOYAL}
            {TRAIT_AGED}
        [/modifications]
    [/unit]
#enddef

#define NOVICE_ORCISH_SHAMAN SIDE X Y ID_STRING NAME_STRING
    [unit]
        id={ID_STRING}
        name={NAME_STRING}
        unrenamable=yes
        type=Novice Orcish Shaman
        profile=portraits/young_orcish_shaman.png
        side={SIDE}
        x={X}
        y={Y}
        random_traits=no
        {IS_HERO}
        [modifications]
            {TRAIT_LOYAL}
            {TRAIT_RESILIENT}
        [/modifications]
    [/unit]
#enddef

#define ORCISH_SHAMAN SIDE X Y ID_STRING NAME_STRING
    [unit]
        id={ID_STRING}
        name={NAME_STRING}
        unrenamable=yes
        type=Orcish Shaman
        profile=portraits/orcish_shaman.png
        side={SIDE}
        x={X}
        y={Y}
        random_traits=no
        {IS_HERO}
        [modifications]
            {TRAIT_LOYAL}
            {TRAIT_STRONG}
        [/modifications]
    [/unit]
#enddef

#define BLACK_FLAG
    flag=flags/black-flag-[1,2,1,3].png:[100,300,100,300]
    flag_icon=flags/black-flag-icon.png
#enddef

#define RENAME_IF_DEAD VAR NAME STRING
    [if]
        [variable]
            name={VAR}
            equals=yes
        [/variable]
        [then]
            {MODIFY_UNIT id={NAME} name {STRING}}
        [/then]
    [/if]
#enddef

#define KAPOUE_SIDE
    type=Orcish Leader
    id="Kapou'e"
    name= _ "Kapou’e"
    unrenamable=yes
    profile=portraits/kapoue.png
    side=1
    canrecruit=yes
    controller=human
    # (keep recruit line in scenario files)
    team_name=Kapoue
    user_team_name=_ "Kapou’e"
#ifdef DEBUG_MODE
    side_name=_ "Kapou’e Side"
#else
#ifndef SCHEMA_VALIDATION
    carryover_percentage={ON_DIFFICULTY 60 50 40}
#endif
#endif
    [modifications]
        {TRAIT_INTELLIGENT}
        {TRAIT_FEARLESS}
    [/modifications]
    {BLACK_FLAG}
#enddef

#define ALBROCK_SIDE
    type=Orcish Warlord
    id="Al'Brock"
    name= _ "Al’Brock"
    unrenamable=yes
    side=2
    canrecruit=yes
    profile=portraits/albrock.png
    recruit=Wolf Rider, Orcish Grunt, Troll Whelp, Orcish Archer, Orcish Crossbowman, Orcish Warrior
    team_name=Kapoue
    user_team_name=_ "Kapou’e"
    persistent=yes
#ifndef SCHEMA_VALIDATION
    carryover_percentage={ON_DIFFICULTY 60 50 40}
#endif
    [modifications]
        {TRAIT_STRONG}
        {TRAIT_RESILIENT}
    [/modifications]
    [filter_recall]
        formula="cost > 20 or experience > 0"
    [/filter_recall]
#enddef

#define FLARTAR_SIDE
    type=Orcish Warlord
    id="Flar'Tar"
    name= _ "Flar’Tar"
    unrenamable=yes
    side=3
    canrecruit=yes
    profile=portraits/flartar.png
    recruit=Wolf Rider, Orcish Grunt, Troll Whelp, Orcish Archer, Orcish Crossbowman, Orcish Warrior
    team_name=Kapoue
    user_team_name=_ "Kapou’e"
    persistent=yes
#ifndef SCHEMA_VALIDATION
    carryover_percentage={ON_DIFFICULTY 60 50 40}
#endif
    [modifications]
        {TRAIT_STRONG}
        {TRAIT_RESILIENT}
    [/modifications]
    [filter_recall]
        formula="cost > 20 or experience > 0"
    [/filter_recall]
#enddef

#define GREAT_HORDE_NOTE
    [note]
        description= _ "The Great Horde: upkeep cost of every unit decreased by one."
    [/note]
#enddef

#define GOT_THE_GREAT_HORDE SIDES
    [event]
        name=prerecruit
        first_time_only=no

        [filter]
            side={SIDES}
        [/filter]

        {VARIABLE unit.upkeep $unit.level}
        [if]
            [variable]
                name=unit.upkeep
                greater_than=0
            [/variable]
            [then]
                {VARIABLE_OP unit.upkeep sub 1}
            [/then]
        [/if]
        {VARIABLE unit.variables.great_horde_upkeep_mod_applied yes}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]

    [event]
        name=start

        [store_unit]
            [filter]
                side={SIDES}

                [not]
                    [filter_wml]
                        [modifications]
                            [trait]
                                id=loyal
                            [/trait]
                        [/modifications]
                        [or]
                            upkeep="loyal"
                        [/or]
                    [/filter_wml]
                [/not]

                [not]
                    [filter_wml]
                        [variables]
                            great_horde_upkeep_mod_applied=yes
                        [/variables]
                    [/filter_wml]
                [/not]
            [/filter]

            kill=yes
            variable=horde_units
        [/store_unit]

        [foreach]
            array=horde_units
            [do]
                {VARIABLE this_item.upkeep $this_item.level}
                [if]
                    [variable]
                        name=this_item.upkeep
                        greater_than=0
                    [/variable]
                    [then]
                        {VARIABLE_OP this_item.upkeep sub 1}
                    [/then]
                [/if]
                {VARIABLE this_item.variables.great_horde_upkeep_mod_applied yes}

                [unstore_unit]
                    variable=this_item
                    find_vacant=no
                [/unstore_unit]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE horde_units}
    [/event]

    [event]
        name=post_advance
        first_time_only=no

        [filter]
            side={SIDES}

            [not]
                [filter_wml]
                    [modifications]
                        [trait]
                            id=loyal
                        [/trait]
                    [/modifications]
                    [or]
                        upkeep="loyal"
                    [/or]
                [/filter_wml]
            [/not]
        [/filter]

        {VARIABLE unit.upkeep $unit.level}
        [if]
            [variable]
                name=unit.upkeep
                greater_than=0
            [/variable]
            [then]
                {VARIABLE_OP unit.upkeep sub 1}
            [/then]
        [/if]
        {VARIABLE unit.variables.great_horde_upkeep_mod_applied yes}

        # Might want to put this in a separate macro instead, but for now just keep it here:
        [if]
            [variable]
                name=unit.type
                equals="Orcish Nightblade"
            [/variable]
            [and]
                [not]
                    # These 2 already handle this separately:
                    [variable]
                        name=unit.id
                        equals=Rugh
                    [/variable]
                    [or]
                        [variable]
                            name=unit.id
                            equals=Plonk
                        [/variable]
                    [/or]
                [/not]
            [/and]
            [then]
                # FIXME: this doesn't work:
                [modify_unit]
                    [filter]
                        id=$unit.id
                    [/filter]
                    [object]
                        id=kick_icon
                        duration=forever
                        silent=yes
                        [effect]
                            apply_to=attack
                            name=kick
                            set_icon=attacks/kick.png
                        [/effect]
                    [/object]
                [/modify_unit]
            [/then]
        [/if]

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
#enddef

#define ENABLE_AI_COMMAND_CA_TRANSPORT_S6
    [lua]
        code = <<
local helper = wesnoth.require "helper"

function wesnoth.custom_synced_commands.ship_unload(cfg)

	local unit = wesnoth.get_unit(cfg.x, cfg.y)
	unit.variables.landed = 'yes'
	unit.variables.destination_x = 1
	unit.variables.destination_y = 30

	local locs = wml.child_array(cfg, "dst")

	local l2_type = helper.rand('Swordsman,Javelineer,Pikeman')
	wesnoth.put_unit({ side = wesnoth.current.side, type = l2_type, moves = 2 }, locs[1].x, locs[1].y)
	wesnoth.add_known_unit(l2_type)

	for i = 2, #locs do
		local l1_type = helper.rand('Fencer,Mage,Cavalryman,Bowman,Spearman')
		wesnoth.put_unit({ side = wesnoth.current.side, type = l1_type, moves = 2 }, locs[i].x, locs[i].y)
		wesnoth.add_known_unit(l1_type)
	end
end

>>
    [/lua]
#enddef

# For the AI controller:
{./ai}
